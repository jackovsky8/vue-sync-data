{"version":3,"file":"vue-sync-query.js","sources":["src/util.js","src/install.js","src/mixin.js","src/index.js","src/extend.js"],"sourcesContent":["/**\n * utilities\n */\n\nexport function warn(msg, err) {\n  if (typeof console !== 'undefined') {\n    console.warn('[vue-sync-query] ' + msg)\n    if (err) {\n      console.warn(err.stack)\n    }\n  }\n}\n\nexport function isObject(obj) {\n  return obj !== null && typeof obj === 'object'\n}\n","import { warn } from './util'\nimport extend from './extend'\nimport mixin from './mixin'\n\nexport let Vue\n\nexport function install(_Vue, options = {}) {\n  if (\n    process.env.NODE_ENV !== 'production' &&\n    install.installed &&\n    _Vue === Vue\n  ) {\n    warn('already installed.')\n    return\n  }\n  install.installed = true\n\n  Vue = _Vue\n\n  // Set Standard Options\n  options = {\n    ...options\n  }\n\n  extend(Vue)\n  Vue.mixin(mixin)\n\n  const strategies = Vue.config.optionMergeStrategies\n  strategies.syncQuery = strategies.props\n}\n","import SyncQuery from './index'\n\nexport default {\n  data: function() {\n    return {\n      syncQuery: {\n        query: {}\n      }\n    }\n  },\n  created() {\n    this._syncQuery = new SyncQuery(this)\n  }\n}\n","import { install, Vue } from './install'\nimport { warn } from './util'\n// import { isObject, isEmpty, isArray, isString, isBoolean, set } from 'lodash'\n\nclass ValueWatchFn {\n  _object\n  _expression\n  _parent\n  _syncQuery\n\n  constructor(object, expression, parent) {\n    this._object = object\n    this._expression = expression\n    this._parent = parent\n    this._syncQuery = parent._syncQuery\n  }\n\n  watchFn = newValue => {\n    if (newValue === undefined || newValue === null || isEmpty(newValue))\n      this._parent._vm.$delete(\n        this._syncQuery.query,\n        this._object.name,\n        newValue\n      )\n    else\n      this._parent._vm.$set(this._syncQuery.query, this._object.name, newValue)\n  }\n}\n\nclass RouteWatchFn {\n  parent\n\n  constructor(parent) {\n    this.parent = parent\n  }\n\n  watchFn = (newValue, oldValue) => {\n    this.parent.readQuery()\n  }\n}\n\nclass QueryWatchFn {\n  parent\n\n  constructor(parent) {\n    this.parent = parent\n  }\n\n  watchFn = (newValue, oldValue) => {\n    this.parent.setQuery()\n  }\n}\n\nexport default class SyncQuery {\n  static install = install\n\n  _vm\n  _watchers\n  _route_watcher\n  _query_watcher\n  _query\n  _syncValue\n\n  constructor(vm) {\n    if (vm instanceof Vue) {\n      this._vm = vm\n    } else {\n      warn('You have to give the Vue instance to Sync Query!')\n      return\n    }\n\n    // Check if Component has registered watchers\n    const options = this._vm.$options\n    options.syncQuery = options.syncQuery || (options.__syncQuery ? {} : null)\n\n    let objects = {}\n\n    if (options.syncQuery && isObject(options.syncQuery)) {\n      warn(`some Data to Sync given ${vm._uid}`)\n      objects = this._getValidSyncObjects(options.syncQuery)\n    }\n\n    // Copy the Reference from the vm to this array\n    this._syncValue = vm.syncQuery\n\n    // If No Sync Watchers are given, nothing to do\n    if (isEmpty(objects)) return\n\n    // Set Watchers for the Given Values\n    this._setWatchers(objects)\n\n    // Finally read the query\n    this.readQuery()\n  }\n\n  // Get only valid watcher Objects\n  _getValidSyncObjects(objects) {\n    let object = {}\n\n    for (let key in objects) {\n      // skip loop if the property is from prototype\n      if (!objects.hasOwnProperty(key)) continue\n\n      let obj = objects[key]\n\n      if (!obj.name || !isString(obj.name)) {\n        warn(`The value 'name' of the syncQuery Object has to be a String!`)\n        continue\n      }\n      if (\n        !obj.type ||\n        !isObject(obj.type) ||\n        !obj.type.name ||\n        !(\n          obj.type.name === 'String' ||\n          obj.type.name === 'Number' ||\n          obj.type.name === 'Boolean' ||\n          obj.type.name === 'Array'\n        )\n      ) {\n        warn(\n          `The value 'type' of the syncQuery Object has to be a String | Number | Boolean | Array!`\n        )\n        continue\n      }\n      if (obj.nullable && !isBoolean(obj.nullable)) {\n        warn(\n          `The value 'nullable' of the syncQuery Object has to be a Boolean!`\n        )\n        continue\n      }\n      if (obj.validate && typeof obj.validate !== 'function') {\n        warn(\n          `The value 'validate' of the syncQuery Object has to be a function!`\n        )\n        continue\n      }\n      object[key] = obj\n    }\n\n    return object\n  }\n\n  _setWatchers(elements) {\n    if (!this._vm) return\n\n    // Set the Value Watchers\n    // But first Unset if there are existing already some\n    this._unsetWatchers()\n\n    const keys = Object.keys(elements)\n    const self = this\n    keys.forEach(key => {\n      const element = elements[key]\n      const watchFn = new ValueWatchFn(element, key, self)\n\n      // Save the watcher in the Object\n      self._watchers.push({\n        unwatchFn: null,\n        expression: key,\n        name: element.name,\n        type: element.type,\n        nullable: element.nullable !== undefined ? element.nullable : true,\n        validate:\n          typeof element.validate === 'function' ? element.validate : null,\n        watchFn\n      })\n      // Create Vue Watcher\n      self._watchers[self._watchers.length - 1].unwatchFn = self._vm.$watch(\n        key,\n        watchFn.watchFn\n      )\n    })\n\n    // Create Route Watcher\n    let watchFnRoute = new RouteWatchFn(this)\n    this._route_watcher = {\n      unwatchFn: null,\n      expression: '$route',\n      watchFn: watchFnRoute\n    }\n    // Create Vue Watcher\n    this._route_watcher.unwatchFn = this._vm.$watch(\n      '$route',\n      watchFnRoute.watchFn,\n      { deep: true }\n    )\n\n    // Create Query Watcher\n    let watchFnQuery = new QueryWatchFn(this)\n    this._query_watcher = {\n      unwatchFn: null,\n      expression: 'syncQuery.query',\n      watchFn: watchFnQuery\n    }\n    // Create Vue Watcher\n    this._query_watcher.unwatchFn = this._vm.$watch(\n      'syncQuery.query',\n      watchFnQuery.watchFn,\n      { deep: true }\n    )\n  }\n\n  _unsetWatchers() {\n    // Unset Value Watchers\n    if (this._watchers && isArray(this._watchers)) {\n      this._watchers.forEach(watcher => {\n        watcher.unwatchFn()\n      })\n    }\n\n    this._watchers = []\n\n    // Unset Route Watcher\n    // this._route_watcher.unwatchFn()\n    // delete this._route_watcher\n\n    // Unset Query Watcher\n    // this._query_watcher.unwatchFn()\n    // delete this._query_watcher\n  }\n\n  readQuery = function() {\n    if (!this._vm.$route) {\n      warn('Vue Router is required!')\n      return\n    }\n\n    const query = this._vm.$route.query\n\n    if (query && isObject(query) && !isEmpty(query)) {\n      for (let key in this._watchers) {\n        // skip loop if the property is from prototype\n        if (!this._watchers.hasOwnProperty(key)) continue\n\n        let obj = this._watchers[key]\n        let type = obj.type.name\n\n        if (type === 'Object') {\n          console.log('Objecterl')\n        }\n\n        let value = this._vm.$route.query[obj.name]\n        if (value !== undefined) {\n          set(this._vm, obj.expression, value)\n        }\n      }\n    }\n  }\n\n  // Set the query\n  setQuery = function() {\n    if (!this._vm.$router) return\n\n    this._vm.$router.push({ query: this._syncValue.query })\n  }\n}\n\n//   readQuery: function() {\n//     if (!this.vm) return\n\n//     this.query = clone(this.vm.$route.query)\n\n//     for (let key in this.watchers) {\n//       // skip loop if the property is from prototype\n//       if (!this.watchers.hasOwnProperty(key)) continue\n\n//       let obj = this.watchers[key]\n//       let type = obj.options.type.name\n\n//       switch (type) {\n//         case 'Array':\n//           console.log('treat like array')\n//           this.readArray(obj)\n//           break\n//         case 'Object':\n//           console.log('treat like object')\n//           this.readObject(obj)\n//           break\n//         case 'String':\n//           console.log('treat like string')\n//           this.readString(obj)\n//           break\n//         case 'Number':\n//           console.log('treat like number')\n//           this.readNumber(obj)\n//           break\n//         case 'Boolean':\n//           console.log('treat like boolean')\n//           this.readBoolean(obj)\n//           break\n//         default:\n//           throw new Error('type is not supported')\n//       }\n//     }\n//   },\n//   readString: function({ expression, options }) {\n//     console.log('read String')\n//     // Proto has to be string\n//     let value = this.vm.$route.query[options.proto]\n//     if (value) {\n//       set(this.vm, expression, value)\n//     }\n//   },\n//   setString: function(value, { expression, options }) {\n//     console.log('set String')\n//     // Proto has to be string\n//     // let value = this.vm.$route.query[options.proto]\n//     // if (value) {\n//     //   set(this.vm, expression, value)\n//     // }\n//   },\n//   readNumber: function({ expression, options }) {\n//     console.log('read Number')\n//     // Proto has to be string\n//     let value = this.vm.$route.query[options.proto]\n//     if (value) {\n//       set(this.vm, expression, parseFloat(value))\n//     }\n//   },\n//   setNumber: function(value, { expression, options }) {\n//     console.log('set Number')\n//     // Proto has to be string\n//     // let value = this.vm.$route.query[options.proto]\n//     // if (value) {\n//     //   set(this.vm, expression, value)\n//     // }\n//   },\n//   readBoolean: function({ expression, options }) {\n//     console.log('read Boolean')\n//     // Proto has to be string\n//     let value = this.vm.$route.query[options.proto]\n//     if (value) {\n//       set(this.vm, expression, JSON.parse(value))\n//     }\n//   },\n//   setBoolean: function(value, { expression, options }) {\n//     console.log('set Boolean')\n//   },\n//   readArray: function({ expression, options }) {\n//     console.log('read Boolean')\n//     // Proto has to be string\n//     let value = this.vm.$route.query[options.proto]\n//     if (value) {\n//       set(this.vm, expression, value)\n//     }\n//   },\n//   setArray: function(value, { expression, options }) {\n//     console.log('set Boolean')\n//   },\n//   readObject: function({ expression, options }) {\n//     console.log('read Boolean')\n//     // Proto has to be string\n//     let value = this.vm.$route.query[options.proto]\n//     if (value) {\n//       set(this.vm, expression, value)\n//     }\n//   },\n//   setObject: function(value, { expression, options }) {\n//     console.log('set Boolean')\n//   }\n// }\n\n// const object = {\n//   vm: null,\n//   watchers: [],\n//   route_watcher: null,\n//   query: {},\n//   $sync: null,\n//   router_query: {},\n//   init: function(vm) {\n//     this.vm = vm\n//     const objects = vm.$options.__proto__.sync\n//     if (isObject(objects)) {\n//       this.addWatchers(vm, objects)\n//     }\n//     // Read the Query on start\n//     this.readQuery()\n//     // delete this.init\n//   },\n//   addWatchers: function(vm = this.vm, elements) {\n//     if (!vm) throw new Error('No Vue Instance Given!')\n\n//     if (!isObject(elements))\n//       throw new Error('Second Value is expected to be an Object!')\n\n//     const keys = Object.keys(elements)\n\n//     keys.forEach(key => {\n//       let element = elements[key]\n//       let watchFn = new this.WatchFnPrototype(element, key, vm, this)\n//       // Save the watcher in the Object\n//       this.watchers.push({\n//         unwatchFn: null,\n//         expression: key,\n//         watchFn,\n//         options: element\n//       })\n//       // Create Vue Watcher\n//       this.watchers[this.watchers.length - 1].unwatchFn = vm.$watch(\n//         key,\n//         watchFn.watchFn,\n//         { deep: true }\n//       )\n//     })\n\n//     if (keys.length > 0) {\n//       vm.$data.$sync = {\n//         query: {}\n//       }\n\n//       this.$sync = vm.$data.$sync\n//     }\n\n//     // Create Route Watcher\n//     let watchFnRoute = new this.WatchFnRoutePrototype(vm, this)\n//     this.route_watcher = {\n//       unwatchFn: null,\n//       expression: '$route',\n//       watchFn: watchFnRoute\n//     }\n//     // Create Vue Watcher\n//     this.route_watcher.unwatchFn = vm.$watch('$route', watchFnRoute.watchFn)\n\n//     // Create Query Watcher\n//     let watchFnQuery = new this.WatchFnQueryPrototype(vm, this)\n//     this.query_watcher = {\n//       unwatchFn: null,\n//       expression: '$sync.query',\n//       watchFn: watchFnQuery\n//     }\n//     // Create Vue Watcher\n//     this.route_watcher.unwatchFn = vm.$watch(\n//       '$sync.query',\n//       watchFnQuery.watchFn\n//     )\n//   },\n//   removeWatchers(vm = this.vm, elements) {\n//     if (!vm) throw new Error('No Vue Instance Given!')\n\n//     if (!isArray(elements))\n//       throw new Error('Second Value is expected to be an Array!')\n\n//     elements.forEach(element => {\n//       vm.$watch(element, this.watchFn)\n//     })\n//   },\n//   WatchFnRoutePrototype(vm, parent) {\n//     this.vm = vm\n//     this.parent = parent\n//     this.watchFn = (newValue, oldValue) => {\n//       console.log('Route Query Changed')\n//       console.log(newValue)\n//       console.log(oldValue)\n//       parent.readQuery()\n//     }\n//   },\n//   WatchFnQueryPrototype(vm, parent) {\n//     this.vm = vm\n//     this.parent = parent\n//     this.watchFn = (newValue, oldValue) => {\n//       console.log('Query Changed')\n//       console.log(newValue)\n//       console.log(oldValue)\n//       parent.setQuery()\n//     }\n//   },\n//   WatchFnPrototype(object, expression, vm, parent) {\n//     this.object = object\n//     this.expression = expression\n//     this.vm = vm\n//     this.parent = parent\n//     this.watchFn = (newValue, oldValue) => {\n//       console.log('Watch of:')\n//       console.log(this.expression)\n//       this.parent.$sync.query[this.object.proto] = newValue\n//       console.log(this.object)\n//       console.log(newValue)\n//       console.log(oldValue)\n//       console.log('edit Value')\n//       console.log(get(this.vm, expression, null))\n//       // this.parent.setQuery()\n//     }\n//   },\n//   readQuery: function() {\n//     if (!this.vm) return\n\n//     this.query = clone(this.vm.$route.query)\n\n//     for (let key in this.watchers) {\n//       // skip loop if the property is from prototype\n//       if (!this.watchers.hasOwnProperty(key)) continue\n\n//       let obj = this.watchers[key]\n//       let type = obj.options.type.name\n\n//       switch (type) {\n//         case 'Array':\n//           console.log('treat like array')\n//           this.readArray(obj)\n//           break\n//         case 'Object':\n//           console.log('treat like object')\n//           this.readObject(obj)\n//           break\n//         case 'String':\n//           console.log('treat like string')\n//           this.readString(obj)\n//           break\n//         case 'Number':\n//           console.log('treat like number')\n//           this.readNumber(obj)\n//           break\n//         case 'Boolean':\n//           console.log('treat like boolean')\n//           this.readBoolean(obj)\n//           break\n//         default:\n//           throw new Error('type is not supported')\n//       }\n//     }\n//   },\n//   setQuery: function() {\n//     this.vm.$router.push({ query: this.$sync.query })\n//   },\n//   readString: function({ expression, options }) {\n//     console.log('read String')\n//     // Proto has to be string\n//     let value = this.vm.$route.query[options.proto]\n//     if (value) {\n//       set(this.vm, expression, value)\n//     }\n//   },\n//   setString: function(value, { expression, options }) {\n//     console.log('set String')\n//     // Proto has to be string\n//     // let value = this.vm.$route.query[options.proto]\n//     // if (value) {\n//     //   set(this.vm, expression, value)\n//     // }\n//   },\n//   readNumber: function({ expression, options }) {\n//     console.log('read Number')\n//     // Proto has to be string\n//     let value = this.vm.$route.query[options.proto]\n//     if (value) {\n//       set(this.vm, expression, parseFloat(value))\n//     }\n//   },\n//   setNumber: function(value, { expression, options }) {\n//     console.log('set Number')\n//     // Proto has to be string\n//     // let value = this.vm.$route.query[options.proto]\n//     // if (value) {\n//     //   set(this.vm, expression, value)\n//     // }\n//   },\n//   readBoolean: function({ expression, options }) {\n//     console.log('read Boolean')\n//     // Proto has to be string\n//     let value = this.vm.$route.query[options.proto]\n//     if (value) {\n//       set(this.vm, expression, JSON.parse(value))\n//     }\n//   },\n//   setBoolean: function(value, { expression, options }) {\n//     console.log('set Boolean')\n//   },\n//   readArray: function({ expression, options }) {\n//     console.log('read Boolean')\n//     // Proto has to be string\n//     let value = this.vm.$route.query[options.proto]\n//     if (value) {\n//       set(this.vm, expression, value)\n//     }\n//   },\n//   setArray: function(value, { expression, options }) {\n//     console.log('set Boolean')\n//   },\n//   readObject: function({ expression, options }) {\n//     console.log('read Boolean')\n//     // Proto has to be string\n//     let value = this.vm.$route.query[options.proto]\n//     if (value) {\n//       set(this.vm, expression, value)\n//     }\n//   },\n//   setObject: function(value, { expression, options }) {\n//     console.log('set Boolean')\n//   }\n// }\n","export default function extend(Vue) {\n  if (!Vue.prototype.hasOwnProperty('$syncQuery')) {\n    Object.defineProperty(Vue.prototype, '$syncQuery', {\n      get() {\n        return this._syncQuery\n      }\n    })\n  }\n}\n"],"names":["warn","msg","err","console","stack","Vue","data","syncQuery","query","created","_syncQuery","SyncQuery","this","ValueWatchFn","object","expression","parent","newValue","isEmpty","_this","_parent","_vm","$delete","_object","name","$set","_expression","RouteWatchFn","oldValue","_this2","readQuery","QueryWatchFn","_this3","setQuery","vm","$route","isObject","key","_watchers","hasOwnProperty","obj","type","log","value","undefined","set","$router","push","_syncValue","options","$options","__syncQuery","objects","_uid","_getValidSyncObjects","_setWatchers","isString","nullable","isBoolean","validate","elements","_unsetWatchers","keys","Object","self","forEach","element","watchFn","unwatchFn","length","$watch","watchFnRoute","_route_watcher","deep","watchFnQuery","_query_watcher","isArray","watcher","install","_Vue","process","env","NODE_ENV","installed","prototype","defineProperty","get","mixin","strategies","config","optionMergeStrategies","props"],"mappings":"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"}